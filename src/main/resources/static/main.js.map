{"version":3,"sources":["./src/app/guards/login.guard.ts","./src/app/components/base/summary/summary.component.ts","./src/app/components/base/summary/summary.component.html","./src/environments/environment.ts","./src/app/components/base/base.component.ts","./src/app/components/base/base.component.html","./src/app/components/base/with-draw/with-draw.component.ts","./src/app/components/base/with-draw/with-draw.component.html","./src/app/components/base/home/home.component.ts","./src/app/components/base/home/home.component.html","./src/app/components/base/fund-transfer/fund-transfer.component.ts","./src/app/components/base/fund-transfer/fund-transfer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/base/change-pin/change-pin.component.ts","./src/app/components/base/change-pin/change-pin.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/base/balance/balance.component.ts","./src/app/components/base/balance/balance.component.html","./src/app/app.module.ts","./src/app/services/account.service.ts","./src/app/material-module.ts","./src/app/components/base/page-header/page-header.component.ts","./src/app/components/base/page-header/page-header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if(localStorage.getItem(\"firstName\") != null && localStorage.getItem(\"accountNumber\") != null ) {\n      this.router.navigate(['account'], {});\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss']\n})\nexport class SummaryComponent implements OnInit, OnDestroy {\n\n  user: string = \"Kalyan\"\n  public now: Date = new Date();\n  accountNumber: string = localStorage.getItem(\"accountNumber\");\n  firstName: string = localStorage.getItem(\"firstName\");\n  lastName: string = localStorage.getItem(\"lastName\");\n\n  interval: any;\n\n\n  constructor() { \n    this.interval = setInterval(() => {\n      this.now = new Date();\n    }, 1);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n}\n","<div class=\"acc-summary\">\n    <div class=\"wel-text\">Welcome, {{firstName}} {{lastName}}</div>\n    <div class=\"wel-text\"><span class=\"font-500\">Account Number:</span> {{accountNumber}} </div>\n    <div class=\"wel-text\"><span class=\"font-500\">Date:</span> {{ now | date:'MMMM dd, y, h:mm a'}} </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n}\n","<page-header></page-header>\n<div class=\"main-container\">\n    <summary></summary>\n    <div class=\"side-container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-with-draw',\n  templateUrl: './with-draw.component.html',\n  styleUrls: ['./with-draw.component.scss']\n})\nexport class WithDrawComponent implements OnInit {\n\n  amount: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(private accountService: AccountService, \n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  doWithdrawal() {\n    this.amount.markAsTouched();\n    if(this.amount.valid) {\n      this.accountService.doWithdraw({ amount: this.amount.value }).subscribe(\n        response => {\n          if(response.status == \"success\") {\n            this.amount.reset();\n            this.snackBar.open('Withdrawal completed', 'ok', {\n              horizontalPosition: 'end',\n              verticalPosition: 'top',\n              duration: 5000,\n              panelClass: ['success-snackbar']\n            });\n          } else {\n            this.snackBar.open(response.message, 'ok', {\n              horizontalPosition: 'end',\n              verticalPosition: 'top',\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        },\n        error => {\n          this.snackBar.open('Something went wrong', 'ok', {\n            horizontalPosition: 'end',\n            verticalPosition: 'top',\n            duration: 5000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      )\n    }\n  }\n}\n","<h2 class=\"heading\">Cash Withdrawal\n    <mat-divider></mat-divider>\n</h2>\n\n<div class=\"base-container\">\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n        <mat-label>Enter Amount</mat-label>\n        <input matInput type=\"number\" [formControl]=\"amount\">\n        <mat-error *ngIf=\"amount.hasError('required')\">\n            Amount is <strong>required</strong>\n        </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\" (click)=\"doWithdrawal()\">OK</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex-container\">\n    <mat-card class=\"card\" routerLink=\"../withdraw\">\n        <div class=\"flex-content\">\n            <mat-icon>paid</mat-icon>\n            <div class=\"card-text\">Cash Withdraw</div>\n        </div>\n    </mat-card>\n    <mat-card class=\"card\" routerLink=\"../balance\">\n        <div class=\"flex-content\">\n            <mat-icon>account_balance</mat-icon>\n            <div class=\"card-text\">Balance Inquiry</div>\n        </div>\n    </mat-card>\n    <mat-card class=\"card\" routerLink=\"../transfer\">\n        <div class=\"flex-content\">\n            <mat-icon>next_plan</mat-icon>\n            <div class=\"card-text\">Funds Transfer</div>\n        </div>\n    </mat-card>\n    <!-- <mat-card class=\"card\" routerLink=\"../change-pin\">\n        <div class=\"flex-content\">\n            <mat-icon>lock</mat-icon>\n            <div class=\"card-text\">Change PIN</div>\n        </div>\n    </mat-card> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CreditCardValidators } from 'angular-cc-library';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-fund-transfer',\n  templateUrl: './fund-transfer.component.html',\n  styleUrls: ['./fund-transfer.component.scss']\n})\nexport class FundTransferComponent implements OnInit {\n\n  transferForm: FormGroup = this.formBuilder.group({\n    cardNumber: ['', [Validators.required, CreditCardValidators.validateCCNumber]],\n    amount: ['', [Validators.required]]\n  })\n\n  constructor(private accountService: AccountService, private snackBar: MatSnackBar,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n  }\n\n  transfer() {\n    this.transferForm.markAllAsTouched();\n    if(this.transferForm.valid) {\n      this.accountService.doFundTransfer(this.transferForm.getRawValue()).subscribe(\n        response => {\n          if(response.status == \"success\") {\n            this.transferForm.controls.amount.reset();\n            this.snackBar.open('Funds have been transfered', 'ok', {\n              horizontalPosition: 'end',\n              verticalPosition: 'top',\n              duration: 5000,\n              panelClass: ['success-snackbar']\n            });\n          } else {\n            this.snackBar.open(response.message, 'ok', {\n              horizontalPosition: 'end',\n              verticalPosition: 'top',\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        }\n      )\n    }\n  }\n}\n","<h2 class=\"heading\">Funds Transfer\n    <mat-divider></mat-divider>\n</h2>\n<div class=\"base-container\">\n    <form class=\"transfer-form\" [formGroup]=\"transferForm\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Enter Recipient Card Number</mat-label>\n            <input matInput required formControlName=\"cardNumber\" id=\"cc-number\" autocomplete=\"cc-number\" ccNumber>\n            <mat-error *ngIf=\"transferForm.controls.cardNumber.hasError('ccNumber') && !transferForm.controls.cardNumber.hasError('required')\">\n                Please enter a valid card number\n            </mat-error>\n            <mat-error *ngIf=\"transferForm.controls.cardNumber.hasError('required')\">\n                Card Number is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Enter Amount</mat-label>\n            <input matInput type=\"number\" required formControlName=\"amount\">\n            <mat-error *ngIf=\"transferForm.controls.amount.hasError('required')\">\n                Pin is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button color=\"primary\" (click)=\"transfer()\">Transfer</button>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if(localStorage.getItem(\"firstName\") != null && localStorage.getItem(\"accountNumber\") != null ) {\n      return true;\n    } else {\n      this.router.navigate(['login'], {});\n      return false;\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-change-pin',\n  templateUrl: './change-pin.component.html',\n  styleUrls: ['./change-pin.component.scss']\n})\nexport class ChangePinComponent implements OnInit {\n\n  constructor(private accountService: AccountService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  updatePin() {\n    this.accountService.updatePIN().subscribe(\n      response => {\n        if(response.status == \"success\") {\n          this.snackBar.open('PIN updated', 'ok', {\n            horizontalPosition: 'end',\n            verticalPosition: 'top',\n            duration: 5000,\n            panelClass: ['success-snackbar']\n          });\n        }\n      }\n    )\n  }\n\n}\n","<h2 class=\"heading\">Change PIN\n    <mat-divider></mat-divider>\n</h2>\n<div class=\"base-container\">\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n        <mat-label>Enter Current PIN</mat-label>\n        <input matInput type=\"text\">\n    </mat-form-field>\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n        <mat-label>Enter New PIN</mat-label>\n        <input matInput type=\"text\">\n    </mat-form-field>\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n        <mat-label>Re Enter New PIN</mat-label>\n        <input matInput type=\"text\">\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\" (click)=\"updatePin()\">Change</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { CreditCardValidators } from 'angular-cc-library';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup = this.formBuilder.group({\n    cardNumber: ['', [Validators.required, CreditCardValidators.validateCCNumber]],\n    pin: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]]\n  })\n  invalid: boolean = false;\n\n  constructor(private router: Router, \n              private formBuilder: FormBuilder, \n              private accountService: AccountService,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {  \n    this.loginForm.markAllAsTouched();\n    if(this.loginForm.valid) {\n      let requestBody = this.loginForm.getRawValue();\n      this.accountService.getAccountInfo(requestBody).subscribe(\n        response => {\n          this.invalid = false;\n          if(response.status == \"valid\") {\n            localStorage.setItem(\"firstName\", response.firstName);\n            localStorage.setItem(\"lastName\", response.lastName);\n            localStorage.setItem(\"accountNumber\", response.accountNumber);\n            localStorage.setItem(\"customerId\", response.customerId);\n            this.router.navigate(['account'], {});\n          } else {\n            this.invalid = true;\n          }\n        }, \n        error => {\n          this.snackBar.open('Something went wrong', 'ok', {\n            horizontalPosition: 'end',\n            verticalPosition: 'top',\n            duration: 5000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      )\n    }    \n  }\n}\n","<div class=\"login-container\">\n    <mat-card class=\"login-card\">\n        <mat-toolbar color=\"primary\">\n            Card Details\n        </mat-toolbar>\n        <form class=\"login-form\" [formGroup]=\"loginForm\">\n            <mat-form-field class=\"full-width\">\n                <mat-label>Credit Card Number</mat-label>\n                <input matInput required formControlName=\"cardNumber\" id=\"cc-number\" autocomplete=\"cc-number\" ccNumber>\n                <mat-icon matSuffix>credit_card</mat-icon>\n                <mat-error *ngIf=\"loginForm.controls.cardNumber.hasError('ccNumber') && !loginForm.controls.cardNumber.hasError('required')\">\n                    Please enter a valid card number\n                </mat-error>\n                <mat-error *ngIf=\"loginForm.controls.cardNumber.hasError('required')\">\n                    Card Number is <strong>required</strong>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"full-width\">\n                <mat-label>PIN</mat-label>\n                <input type=\"password\" matInput required formControlName=\"pin\">\n                <mat-icon matSuffix>lock</mat-icon>\n                <mat-error *ngIf=\"loginForm.controls.pin.hasError('required')\">\n                    Pin is <strong>required</strong>\n                </mat-error>\n            </mat-form-field>\n        </form>\n        <div class=\"login-action\">\n            <button mat-raised-button color=\"primary\" (click)=\"login()\">ENTER</button>\n        </div>\n        <div *ngIf=\"invalid\" class=\"error-message\">\n            Invalid Card or PIN\n        </div>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-balance',\n  templateUrl: './balance.component.html',\n  styleUrls: ['./balance.component.scss']\n})\nexport class BalanceComponent implements OnInit {\n\n  balance: number;\n  fetchingBalance: boolean = false;\n  \n  constructor(private accountService: AccountService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.fetchingBalance = true;\n    this.accountService.getAccountBalance().subscribe(\n      response => {\n        this.balance = response.balance;\n        this.fetchingBalance = false;\n      },\n      error => {\n        this.fetchingBalance = false;\n        this.snackBar.open('Something went wrong', 'ok', {\n          horizontalPosition: 'end',\n          verticalPosition: 'top',\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        });\n      }\n    )\n  }\n\n}\n","<h2 class=\"heading\">Account Balance\n    <mat-divider></mat-divider>\n</h2>\n<div class=\"base-container\">\n    <div class=\"bal-text\">\n        <ng-container *ngIf=\"fetchingBalance\">\n            Fetching account balance.\n        </ng-container>\n        <ng-container *ngIf=\"!fetchingBalance\">\n            Your current account balance is: <span class=\"font-500\">{{ balance | currency:'AUD' }}</span> \n        </ng-container>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './material-module';\nimport { PageHeaderComponent } from './components/base/page-header/page-header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { BaseComponent } from './components/base/base.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\nimport { HomeComponent } from './components/base/home/home.component';\nimport { SummaryComponent } from './components/base/summary/summary.component';\nimport { WithDrawComponent } from './components/base/with-draw/with-draw.component';\nimport { BalanceComponent } from './components/base/balance/balance.component';\nimport { FundTransferComponent } from './components/base/fund-transfer/fund-transfer.component';\nimport { ChangePinComponent } from './components/base/change-pin/change-pin.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageHeaderComponent,\n    LoginComponent,\n    BaseComponent,\n    SummaryComponent,\n    HomeComponent,\n    WithDrawComponent,\n    BalanceComponent,\n    FundTransferComponent,\n    ChangePinComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DemoMaterialModule,\n    HttpClientModule,\n    CreditCardDirectivesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  ACCOUNT_INFO_URL = \"/api/accountInfo\";\n  ACCOUNT_BALANCE_URL = \"/api/balance\";\n  WITHDRAW_URL = \"/api/withdraw\";\n  FUND_TRANSFER_URL = \"/api/transfer\";\n  UPDATE_PIN_URL = \"/api/changePin\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAccountInfo(body) {\n    return this.httpClient.post<any>(this.ACCOUNT_INFO_URL, body);\n  }\n\n  getAccountBalance() {\n    let body = {}\n    body['customerId'] = localStorage.getItem('customerId');\n    return this.httpClient.post<any>(this.ACCOUNT_BALANCE_URL, body);\n  }\n\n  doWithdraw(body) {\n    body[\"customerId\"] = localStorage.getItem(\"customerId\");\n    const headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n    return this.httpClient.post<any>(this.WITHDRAW_URL, body, {headers: headers});\n  }\n\n  doFundTransfer(body) {\n    body[\"customerId\"] = localStorage.getItem(\"customerId\");\n    return this.httpClient.post<any>(this.FUND_TRANSFER_URL, body);\n  }\n\n  updatePIN() {\n    return this.httpClient.post<any>(this.UPDATE_PIN_URL, {});\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        ClipboardModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        OverlayModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  email: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.email = localStorage.getItem(\"email\");\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['login'], {});\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>ATM</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button routerLink=\"/account/home\" id=\"home\">\n        <mat-icon>home</mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"logout()\">\n        <mat-icon>logout</mat-icon>\n    </button>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BalanceComponent } from './components/base/balance/balance.component';\nimport { BaseComponent } from './components/base/base.component';\nimport { ChangePinComponent } from './components/base/change-pin/change-pin.component';\nimport { FundTransferComponent } from './components/base/fund-transfer/fund-transfer.component';\nimport { HomeComponent } from './components/base/home/home.component';\nimport { WithDrawComponent } from './components/base/with-draw/with-draw.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoginGuard } from './guards/login.guard';\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent, canActivate: [LoginGuard] },\n  {\n    path: \"account\", component: BaseComponent, canActivate: [AuthGuard],\n    children: [\n      { path: \"home\", component: HomeComponent },\n      { path: \"withdraw\", component: WithDrawComponent },\n      { path: \"change-pin\", component: ChangePinComponent },\n      { path: \"transfer\", component: FundTransferComponent },\n      { path: \"balance\", component: BalanceComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' }\n    ]\n  },\n  { path: '', redirectTo: 'account', pathMatch: 'full' }, \n  // { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}